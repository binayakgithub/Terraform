provider "aws" {
access_key="AKIAUJILQAXR22ZGF63H"
secret_key="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"
region="us-east-1"
}

data "aws_availability_zones" "available"{}

resource "aws_vpc" "tf_vpc"{
	cidr_block="${var.vpc_cidr}"
	enable_dns_hostnames=true
	enable_dns_support=true
	tags={
		Name="tf_vpc"
	}
}

resource "aws_internet_gateway" "tf_internet_gateway"{
	vpc_id="${aws_vpc.tf_vpc.id}"
	tags={
		Name="tf_IGW"
	}
}

resource "aws_eip" "eip" {
	vpc=true
}

resource "aws_subnet" "tf_public_subnet" {
  count                   = 2
  vpc_id                  = "${aws_vpc.tf_vpc.id}"
  cidr_block              = "${var.public_cidrs[count.index]}"
  map_public_ip_on_launch = true
  availability_zone       = "${data.aws_availability_zones.available.names[count.index]}"

  tags= {
    Name = "tf_public_${count.index + 1}"
  }
}

resource "aws_subnet" "tf_private_subnet" {
	count=1
	vpc_id="${aws_vpc.tf_vpc.id}"
	cidr_block="10.0.0.64/27"
	map_public_ip_on_launch=false
	availability_zone="${data.aws_availability_zones.available.names[count.index]}"
	tags={
		Name="tf_private_${count.index+1}"
	}
}

data "aws_subnet_ids" "example" {
	vpc_id = "${aws_vpc.tf_vpc.id}"
}

output "subnet_id1"{
	value="${tolist(toset(data.aws_subnet_ids.example.ids))[0]}"
}

output "subnet_id2"{
	value="${tolist(toset(data.aws_subnet_ids.example.ids))[1]}"
}

output "subnet_id3"{
	value="${tolist(toset(data.aws_subnet_ids.example.ids))[2]}"
}

/*data "aws_subnet" "example" {
  count = "${length(data.aws_subnet_ids.example.ids)}"
  id    = "${data.aws_subnet_ids.example.ids[count.index]}"
}

output "subnet_cidr_blocks" {
  value = ["${data.aws_subnet.example.*.cidr_block}"]
}*/

resource "aws_nat_gateway" "nat_gw" {
		allocation_id="${aws_eip.eip.id}"
		subnet_id="${aws_subnet.tf_public_subnet.*.id[0]}"
}

resource "aws_route_table" "tf_public_rt" {
  vpc_id = "${aws_vpc.tf_vpc.id}"

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = "${aws_internet_gateway.tf_internet_gateway.id}"
  }

  tags= {
    Name = "tf_public"
  }
}

resource "aws_default_route_table" "tf_private_rt" {
  default_route_table_id  = "${aws_vpc.tf_vpc.default_route_table_id}"

	route {
		cidr_block="0.0.0.0/0"
		gateway_id="${aws_nat_gateway.nat_gw.id}"
	}
  tags= {
    Name = "tf_private"
  }
}

resource "aws_route_table_association" "tf_public_assoc" {
  count          = "${length(aws_subnet.tf_public_subnet)}"
  subnet_id      = "${aws_subnet.tf_public_subnet.*.id[count.index]}"
  route_table_id = "${aws_route_table.tf_public_rt.id}"
}

resource "aws_route_table_association" "tf_private_assoc" {
	count="${length(aws_subnet.tf_private_subnet)}"
  subnet_id      = "${aws_subnet.tf_private_subnet.*.id[count.index]}"
  route_table_id = "${aws_vpc.tf_vpc.default_route_table_id}"
}

resource "aws_security_group" "tf_public_sg" {
  name        = "tf_public_sg"
  description = "Used for access to the public instances"
  vpc_id      = "${aws_vpc.tf_vpc.id}"

  #SSH

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["${var.accessip}"]
  }

  #HTTP

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["${var.accessip}"]
  }
  #All Traffic
  ingress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["${var.accessip}"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}
